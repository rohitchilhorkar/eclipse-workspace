package com.pratiti.dao;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.pratiti.entity.Product;

// Data Access Object
// Classes which contain db communication code
public class ProductDao {

	public void add(Product product) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
//		Must write for TCL, for security purpose
		em.getTransaction().begin();
		
		em.persist(product); //persist will generate insert query
//		em.merge(product); //persist will generate update query
//		em.remove(product); //persist will generate remove query
		
		em.getTransaction().commit();
		emf.close();
	}
	public void Delete(Product product) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
//		Must write for TCL, for security purpose
		em.getTransaction().begin();
		
		em.remove(product); //persist will generate insert query
//		em.merge(product); //persist will generate update query
//		em.remove(product); //persist will generate remove query
		
		em.getTransaction().commit();
		emf.close();
	}
	public void Update(Product product) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
//		Must write for TCL, for security purpose
		em.getTransaction().begin();
		
		em.merge(product); //persist will generate insert query
//		em.merge(product); //persist will generate update query
//		em.remove(product); //persist will generate remove query
		
		em.getTransaction().commit();
		emf.close();
	}
	
	public Product fetch(int id) {
		
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			find method generates select queries with where pk=?
//			Find method is used to find info only using primarykey
			Product product = em.find(Product.class, id);
			return product;
		}
		finally {
			emf.close();
		}
	}
	
	public List<Product> fetchAll(){		
		
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			We must give an alias in HQL, no * allowed
			Query q = em.createQuery("select p from Product p"); //hibernate query language/java persistence ql
			List<Product> list = q.getResultList();
			return list;
		}
		finally {
			emf.close();
		} 
		
	}
	public List<Product> fetchByPrice(double price){		
		
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			We must give an alias in HQL, no * allowed
			Query q = em.createQuery("select p from Product p where p.price >= :pr"); //hibernate query language/java persistence ql
			q.setParameter("pr", price); //substituting :pr with actual value
			List<Product> list = q.getResultList();
			return list;
		}
		finally {
			emf.close();
		}		
	}
	public List<Product> fetchByName(String name){		
		
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			We must give an alias in HQL, no * allowed
//			We must write variable name in the select query        |p.productName|  
			Query q = em.createQuery("select p from Product p where p.productName like :nm"); //hibernate query language/java persistence ql
			q.setParameter("nm", "%"+name+"%"); //substituting :pr with actual value
			List<Product> list = q.getResultList();
			return list;
		}
		finally {
			emf.close();
		} 
		
	}
	public void deleteByName(String Name){
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			We must give an alias in HQL, no * allowed
//			We must write variable name in the select query        |p.productName|  
			Query q = em.createQuery("delete from Product p where p.productName = :nm"); //hibernate query language/java persistence ql
			q.setParameter("nm", "%"+Name+"%"); //substituting :pr with actual value
		}
		finally {
			emf.close();
		} 
	}
}





















