package com.pratiti.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.pratiti.entity.Album;
import com.pratiti.entity.Customer;
import com.pratiti.entity.Song;

public class AlbumSongDao {

	public void save(Object obj) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
		em.getTransaction().begin();
//		Can be used for update and insert
		em.merge(obj);
		em.getTransaction().commit();
		emf.close();
	}
	
	public Object fetchAll(Class clazz, int id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
		try {
			return em.find(clazz, id);
		}
		finally {
			emf.close();
		}
	}
//  Better Version
	public <E> E fetchAllV2(Class<E> clazz, int id) {
		EntityManagerFactory emf = Persistence.createEntityManagerFactory("hibernate_introduction");
		EntityManager em = emf.createEntityManager();
		try {
			return em.find(clazz, id);
		}
		finally {
			emf.close();
		}
	}
	
	public <E> E fetchId(Class<E> clazz, int id) {
		
		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
			return em.find(clazz, id);
		}
		finally {
			emf.close();
		}
	}
	
	@SuppressWarnings("unchecked")
	public List<Song> fetchSongsSungByArtist(String artistName){

		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			table ka naam Class ka naam hoga..isiliye ise class ka naam dena hai table ki jagah
			Query q = em.createQuery("select s from Song s where artistName = :nm");
			q.setParameter("nm", artistName);
			return q.getResultList();
		}
		finally {
			emf.close();
		}
	}
	
	public List<Album> fetchAlbumsByArtist(String artistName){

		EntityManagerFactory emf = null;
		try {
			emf = Persistence.createEntityManagerFactory("hibernate_introduction");
			EntityManager em = emf.createEntityManager();
//			table ka naam Class ka naam hoga..isiliye ise class ka naam dena hai table ki jagah
			Query q = em.createQuery("select s from Song s join Album a where artistName = :artistName");
			q.setParameter("nm", artistName);
			return q.getResultList();
		}
		finally {
			emf.close();
		}
	}
	
	
	
}








